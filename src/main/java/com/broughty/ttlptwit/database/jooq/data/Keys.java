/*
 * This file is generated by jOOQ.
 */
package com.broughty.ttlptwit.database.jooq.data;


import com.broughty.ttlptwit.database.jooq.data.tables.ListeningParty;
import com.broughty.ttlptwit.database.jooq.data.tables.ListeningPartyTweet;
import com.broughty.ttlptwit.database.jooq.data.tables.records.ListeningPartyRecord;
import com.broughty.ttlptwit.database.jooq.data.tables.records.ListeningPartyTweetRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ListeningPartyRecord> CONSTRAINT_C = Internal.createUniqueKey(ListeningParty.LISTENING_PARTY, DSL.name("CONSTRAINT_C"), new TableField[] { ListeningParty.LISTENING_PARTY.TTLP_NO }, true);
    public static final UniqueKey<ListeningPartyRecord> PK_LISTENING_PARTY = Internal.createUniqueKey(ListeningParty.LISTENING_PARTY, DSL.name("PK_LISTENING_PARTY"), new TableField[] { ListeningParty.LISTENING_PARTY.TTLP_NO }, true);
    public static final UniqueKey<ListeningPartyTweetRecord> PK_LISTENING_PARTY_TWEET = Internal.createUniqueKey(ListeningPartyTweet.LISTENING_PARTY_TWEET, DSL.name("PK_LISTENING_PARTY_TWEET"), new TableField[] { ListeningPartyTweet.LISTENING_PARTY_TWEET.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ListeningPartyTweetRecord, ListeningPartyRecord> FK_LISTENING_PARTY_TWEET_ID = Internal.createForeignKey(ListeningPartyTweet.LISTENING_PARTY_TWEET, DSL.name("FK_LISTENING_PARTY_TWEET_ID"), new TableField[] { ListeningPartyTweet.LISTENING_PARTY_TWEET.LISTENING_PARTY_ID }, Keys.PK_LISTENING_PARTY, new TableField[] { ListeningParty.LISTENING_PARTY.TTLP_NO }, true);
}
